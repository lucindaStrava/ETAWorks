{"paragraphs":[{"text":"100 as name\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.sql.functions.{abs, col}\nimport org.apache.spark.sql.SaveMode\nimport spark.implicits._\n","user":"anonymous","dateUpdated":"2020-01-10T17:13:01+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.sql.functions.{abs, col}\nimport org.apache.spark.sql.SaveMode\nimport spark.implicits._\n"}]},"apps":[],"jobName":"paragraph_1578674261271_407984700","id":"20200106-182031_739474902","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:41:08+0000","dateFinished":"2020-01-10T16:41:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:115858"},{"text":"val athlete = spark.read.load(s\"s3a://strava.scratch/gbm/bay-area/athleteFeatureV0.1/featureVector\")\nathlete.printSchema\n\nval edge = spark.read.load(\"s3a://strava.scratch/gbm/bay-area/edgeFeature\")\nedge.printSchema\n\nval activityDf = spark.read.parquet(s\"s3a://strava.scratch/gbm/bay-area/edgesPerActivityTest\").filter(\"activityType == 'Run'\")\nactivityDf.printSchema","user":"anonymous","dateUpdated":"2020-01-10T16:41:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"athlete: org.apache.spark.sql.DataFrame = [ATHLETE_ID: decimal(38,0), features: vector ... 1 more field]\nroot\n |-- ATHLETE_ID: decimal(38,0) (nullable = true)\n |-- features: vector (nullable = true)\n |-- datestr: date (nullable = true)\n\nedge: org.apache.spark.sql.DataFrame = [edgeUID: bigint, features: vector]\nroot\n |-- edgeUID: long (nullable = true)\n |-- features: vector (nullable = true)\n\nactivityDf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [activityId: bigint, athleteId: bigint ... 10 more fields]\nroot\n |-- activityId: long (nullable = true)\n |-- athleteId: long (nullable = true)\n |-- activityType: string (nullable = true)\n |-- startDateLocal: double (nullable = true)\n |-- edgeList: array (nullable = true)\n |    |-- element: long (containsNull = true)\n |-- durationList: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- distanceList: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- coverageList: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- elapsedTimeSum: double (nullable = true)\n |-- elapsedTime: integer (nullable = true)\n |-- movingTime: integer (nullable = true)\n |-- key: integer (nullable = true)\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3622","true/jobs/job?id=3622","true/jobs/job?id=3622","true/jobs/job?id=3623","true/jobs/job?id=3623","true/jobs/job?id=3623","true/jobs/job?id=3624","true/jobs/job?id=3624","true/jobs/job?id=3624","true/jobs/job?id=3625","true/jobs/job?id=3625","true/jobs/job?id=3625"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261282_473076530","id":"20200106-194155_398311135","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:41:43+0000","dateFinished":"2020-01-10T16:41:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115859"},{"text":"athlete.createOrReplaceTempView(\"athletes\")\nedge.createOrReplaceTempView(\"edges\")\nactivityDf.createOrReplaceTempView(\"activity\")\n","user":"anonymous","dateUpdated":"2020-01-10T16:41:48+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1578674261285_-624284597","id":"20200106-210655_800743212","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:41:48+0000","dateFinished":"2020-01-10T16:41:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115860"},{"text":"val routeETA = spark.read.parquet(\"s3a://strava.scratch/gbm/bay-area/routeResult/version0.0\")\nrouteETA.printSchema\nrouteETA.createOrReplaceTempView(\"routeResult\")","user":"anonymous","dateUpdated":"2020-01-10T16:42:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"routeETA: org.apache.spark.sql.DataFrame = [activityId: bigint, isBestEffort: double ... 9 more fields]\nroot\n |-- activityId: long (nullable = true)\n |-- isBestEffort: double (nullable = true)\n |-- athleteId: long (nullable = true)\n |-- routeEstimation: double (nullable = true)\n |-- numEdgeSummed: long (nullable = true)\n |-- distance: double (nullable = true)\n |-- numEdge: integer (nullable = true)\n |-- elapsedTimeSum: double (nullable = true)\n |-- elapsedTime: integer (nullable = true)\n |-- movingTime: integer (nullable = true)\n |-- truth: double (nullable = true)\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3626","true/jobs/job?id=3626","true/jobs/job?id=3626"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261309_21489907","id":"20200106-224509_491774466","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:42:24+0000","dateFinished":"2020-01-10T16:42:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115861"},{"text":"spark.sql(\n    \"\"\"\n    select distance from routeResult where isBestEffort > 0.5 and (elapsedTime - movingTime) / movingTime < 0.2 and numEdgeSummed = numEdge and elapsedTimeSum / elapsedTime < 1.05\n    and distance/truth > 0.6 and distance/truth < 10\n    and distance < 28000\n    \"\"\"\n    \n    ).as[Double].rdd.histogram(10)\n    \n// 3200, 3200-8000, 8000-16000, 16000-20000, >20000","user":"anonymous","dateUpdated":"2020-01-10T17:03:30+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res15: (Array[Double], Array[Long]) = (Array(8.058900000000001, 2804.7890199999997, 5601.519139999999, 8398.249259999999, 11194.979379999999, 13991.709499999999, 16788.439619999997, 19585.16974, 22381.899859999998, 25178.629979999998, 27975.360099999998),Array(75623, 185992, 165383, 90559, 41209, 17890, 6882, 4456, 1571, 568))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3676","true/jobs/job?id=3676","true/jobs/job?id=3676","true/jobs/job?id=3677","true/jobs/job?id=3677","true/jobs/job?id=3677"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261314_201280168","id":"20200110-053059_67664733","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T17:03:30+0000","dateFinished":"2020-01-10T17:04:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115862"},{"text":"\nval myQuery = \"\"\"\nselect \n*,\ncase when distance < 3200 then 0\n     when distance>=3200 and distance<8000 then 1\n    when distance>=8000 and distance<16000 then 2\n     when distance>=16000 and distance<20000 then 3\n    else 4 end\nAS bucket\nfrom routeResult\nwhere isBestEffort > 0.5 and (elapsedTime - movingTime) / movingTime < 0.2 and numEdgeSummed = numEdge and elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\"\"\"\nval df = spark.sql(myQuery)\ndf.cache()\ndf.createOrReplaceTempView(\"buckets\")","user":"anonymous","dateUpdated":"2020-01-10T17:05:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myQuery: String =\n\"\nselect\n*,\ncase when distance < 3200 then 0\n     when distance>=3200 and distance<8000 then 1\n    when distance>=8000 and distance<16000 then 2\n     when distance>=16000 and distance<20000 then 3\n    else 4 end\nAS bucket\nfrom routeResult\nwhere isBestEffort > 0.5 and (elapsedTime - movingTime) / movingTime < 0.2 and numEdgeSummed = numEdge and elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\"\ndf: org.apache.spark.sql.DataFrame = [activityId: bigint, isBestEffort: double ... 10 more fields]\nres16: df.type = [activityId: bigint, isBestEffort: double ... 10 more fields]\n"}]},"apps":[],"jobName":"paragraph_1578674261316_1119350768","id":"20200110-054917_443525094","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T17:05:37+0000","dateFinished":"2020-01-10T17:05:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115863"},{"text":"spark.sql(\"\"\"\nselect bucket, count(1) from buckets\ngroup by bucket\norder by bucket\n\"\"\").collect","user":"anonymous","dateUpdated":"2020-01-10T17:05:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res18: Array[org.apache.spark.sql.Row] = Array([0,89350], [1,314261], [2,167904], [3,12809], [4,6310])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3678","true/jobs/job?id=3678","true/jobs/job?id=3678","true/jobs/job?id=3679","true/jobs/job?id=3679","true/jobs/job?id=3679"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261318_-1480783618","id":"20200108-000308_444188505","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T17:05:44+0000","dateFinished":"2020-01-10T17:05:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115864"},{"text":"spark.sql(\"\"\"\nselect count(1) from routeResult where isBestEffort > 0.5 and (elapsedTime - movingTime) / movingTime < 0.2 and numEdgeSummed = numEdge and elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\"\"\").collect()","user":"anonymous","dateUpdated":"2020-01-10T16:51:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578675067918_1125233161","id":"20200110-165107_833288398","dateCreated":"2020-01-10T16:51:07+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:115865"},{"text":"val myQuery = \"\"\"\nselect\napprox_percentile(abs(routeEstimation - truth), 0.05) / 60 as p5,\n\napprox_percentile(abs(routeEstimation - truth), 0.1) / 60 as p10,\n\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99\n\nfrom routeResult\nwhere numEdgeSummed == numEdge\nand isBestEffort > 0.5\nand abs(elapsedTime - movingTime) / movingTime < 0.2\nand  elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\n-- and  elapsedTimeSum*movingTime/elapsedTime >=14400\n\"\"\"\nval percentiles = spark.sql(myQuery).collect\n\n","user":"anonymous","dateUpdated":"2020-01-10T16:47:22+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myQuery: String =\n\"\nselect\napprox_percentile(abs(routeEstimation - truth), 0.05) / 60 as p5,\n\napprox_percentile(abs(routeEstimation - truth), 0.1) / 60 as p10,\n\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99\n\nfrom routeResult\nwhere numEdgeSummed == numEdge\nand isBestEffort > 0.5\nand abs(elapsedTime - movingTime) / movingTime < 0.2\nand  elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\n-- and  elapsedTimeSum*movingTime/elapsedTime >=14400\n\"\npercentiles: Array[org.apache.spark.sql.Row] = Array([0.33623311256696126,0.7011651543532131,3.9748364708326185,11.101036081363599,14.634503885748911,25.00765140931137])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3629","true/jobs/job?id=3629","true/jobs/job?id=3629"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261320_-612519568","id":"20200106-225153_888147498","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:47:22+0000","dateFinished":"2020-01-10T16:47:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115866"},{"text":"val myQuery = \"\"\"\nselect\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.05)*100 as p5,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.1)*100 as p10,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.5)*100 as p50,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.9)*100 as p90,\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.95)*100 as p95,\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.99)*100 as p99\n\nfrom routeResult\nwhere numEdgeSummed == numEdge\nand isBestEffort > 0.5\nand abs(elapsedTime - movingTime) / movingTime < 0.2\nand  elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\n\"\"\"\nval percentiles = spark.sql(myQuery).collect","user":"anonymous","dateUpdated":"2020-01-10T16:47:53+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myQuery: String =\n\"\nselect\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.05)*100 as p5,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.1)*100 as p10,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.5)*100 as p50,\n\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.9)*100 as p90,\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.95)*100 as p95,\napprox_percentile(  abs(routeEstimation - truth) / truth, 0.99)*100 as p99\n\nfrom routeResult\nwhere numEdgeSummed == numEdge\nand isBestEffort > 0.5\nand abs(elapsedTime - movingTime) / movingTime < 0.2\nand  elapsedTimeSum / elapsedTime < 1.05\nand distance/truth > 0.6 and distance/truth < 10\n\n\"\npercentiles: Array[org.apache.spark.sql.Row] = Array([1.7837956020926977,3.477935961784242,12.832924496798558,26.57665351739898,34.585214932453916,64.84169840354647])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3630","true/jobs/job?id=3630","true/jobs/job?id=3630"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261323_-1468225924","id":"20200108-192354_877267711","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T16:47:53+0000","dateFinished":"2020-01-10T16:47:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115867"},{"text":"val myQuery = \"\"\"\nwith b0 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\nfrom buckets\nwhere bucket = 0\n),\n\nb1 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 1\n),\nb2 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 2\n),\nb3 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 3\n),\nb4 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 4\n)\n\nselect\narray(b0.p50, b1.p50, b2.p50, b3.p50, b4.p50) as p50,\narray(b0.p90, b1.p90, b2.p90, b3.p90, b4.p90) as p90,\narray(b0.p95, b1.p95, b2.p95, b3.p95, b4.p95) as p95,\narray(b0.p99, b1.p99, b2.p99, b3.p99, b4.p99) as p99\n\nfrom b0 join b1 on b0.name = b1.name\njoin b2 on b0.name=b2.name\njoin b3 on b0.name=b3.name\njoin b4 on b0.name=b4.name\n\n\"\"\"\nval percentiles = spark.sql(myQuery).collect","user":"anonymous","dateUpdated":"2020-01-10T17:26:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myQuery: String =\n\"\nwith b0 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\nfrom buckets\nwhere bucket = 0\n),\n\nb1 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstimation - truth), 0.9) / 60 as p90,\napprox_percentile(abs(routeEstimation - truth), 0.95) / 60 as p95,\napprox_percentile(abs(routeEstimation - truth), 0.99) / 60 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 1\n),\nb2 as (\nselect\napprox_percentile(abs(routeEstimation - truth), 0.5) / 60 as p50,\n\napprox_percentile(abs(routeEstim...percentiles: Array[org.apache.spark.sql.Row] = Array([WrappedArray(1.326265148394891, 3.666242593119273, 6.404852554819468, 10.492683087763437, 12.475111617123154),WrappedArray(4.847464848019414, 8.704622242572384, 13.729186159419305, 21.00535340370475, 25.822073097245962),WrappedArray(7.671202580057226, 11.343089545911068, 17.1978634810025, 24.991449744328005, 33.93257752411249),WrappedArray(18.419513030643362, 20.783829954868718, 27.711399064740288, 36.55985930129462, 102.74363535659776)])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3697","true/jobs/job?id=3697","true/jobs/job?id=3697","true/jobs/job?id=3698","true/jobs/job?id=3698","true/jobs/job?id=3698","true/jobs/job?id=3699","true/jobs/job?id=3699","true/jobs/job?id=3699","true/jobs/job?id=3700","true/jobs/job?id=3700","true/jobs/job?id=3700","true/jobs/job?id=3701","true/jobs/job?id=3701","true/jobs/job?id=3701"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578674261333_-919805268","id":"20200107-174130_1860482675","dateCreated":"2020-01-10T16:37:41+0000","dateStarted":"2020-01-10T17:14:12+0000","dateFinished":"2020-01-10T17:15:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115868"},{"text":"val myQuery = \"\"\"\nwith b0 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\nfrom buckets\nwhere bucket = 0\n),\n\nb1 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 1\n),\nb2 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 2\n),\nb3 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 3\n),\nb4 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 4\n)\n\nselect\narray(b0.p50, b1.p50, b2.p50, b3.p50, b4.p50) as p50,\narray(b0.p90, b1.p90, b2.p90, b3.p90, b4.p90) as p90,\narray(b0.p95, b1.p95, b2.p95, b3.p95, b4.p95) as p95,\narray(b0.p99, b1.p99, b2.p99, b3.p99, b4.p99) as p99\n\nfrom b0 join b1 on b0.name = b1.name\njoin b2 on b0.name=b2.name\njoin b3 on b0.name=b3.name\njoin b4 on b0.name=b4.name\n\n\"\"\"\nval percentiles = spark.sql(myQuery).collect","user":"anonymous","dateUpdated":"2020-01-10T17:28:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myQuery: String =\n\"\nwith b0 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\nfrom buckets\nwhere bucket = 0\n),\n\nb1 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*100 as p50,\n\napprox_percentile(abs(routeEstimation - truth)/truth, 0.9)*100 as p90,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.95)*100 as p95,\napprox_percentile(abs(routeEstimation - truth)/truth, 0.99)*100 as p99,\n100 as name\n\n\nfrom buckets\nwhere bucket = 1\n),\nb2 as (\nselect\napprox_percentile(abs(routeEstimation - truth)/truth, 0.5)*...percentiles: Array[org.apache.spark.sql.Row] = Array([WrappedArray(16.243450887567533, 12.662667274989046, 12.231230194907967, 12.161606084750026, 11.193429018017202),WrappedArray(47.903749067053475, 25.222706002347206, 22.203757867030408, 21.486272621959497, 20.644886015165444),WrappedArray(65.42949265527675, 31.168994038152427, 26.416909882291467, 25.17751067077358, 24.791109471591962),WrappedArray(119.56448370780934, 48.947853224052125, 39.15344029123007, 38.21412260127895, 56.607814619827145)])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["true/jobs/job?id=3720","true/jobs/job?id=3720","true/jobs/job?id=3720","true/jobs/job?id=3721","true/jobs/job?id=3721","true/jobs/job?id=3721","true/jobs/job?id=3722","true/jobs/job?id=3722","true/jobs/job?id=3722","true/jobs/job?id=3723","true/jobs/job?id=3723","true/jobs/job?id=3723","true/jobs/job?id=3724","true/jobs/job?id=3724","true/jobs/job?id=3724"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1578676523107_577260826","id":"20200110-171523_241257465","dateCreated":"2020-01-10T17:15:23+0000","dateStarted":"2020-01-10T17:28:25+0000","dateFinished":"2020-01-10T17:28:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115869"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578677203687_1122571439","id":"20200110-172643_360623269","dateCreated":"2020-01-10T17:26:43+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:115870"}],"name":"/lucindaz/edgeToRouteV0","id":"2EZ2B9YAP","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}