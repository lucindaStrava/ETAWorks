{"paragraphs":[{"text":"import org.apache.spark.sql.functions.col\nimport org.apache.spark.sql.SaveMode\nimport spark.implicits._ ","user":"anonymous","dateUpdated":"2020-01-06T23:59:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.col\nimport org.apache.spark.sql.SaveMode\nimport spark.implicits._\n"}]},"apps":[],"jobName":"paragraph_1578334831419_1135286388","id":"20200106-182031_739474902","dateCreated":"2020-01-06T18:20:31+0000","dateStarted":"2020-01-06T23:59:17+0000","dateFinished":"2020-01-06T23:59:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:106758"},{"text":"// Note that when we use edgeTraversal data is generated with a bunch of filtering (coverage, meanDistance, meanSpeed etc) so the edge list generated from edgeTraversal and sum of elapsedTime is incomplete.\n// use it for now to have an idea first\ncase class EdgesPerActivity(\n                                  activityId: Long,\n                                  athleteId: Long,\n                                  activityType: String,\n                                  startDateLocal: Double,\n                                  edgeList: Array[Long],\n                                  durationList: Array[Double],\n                                  distanceList: Array[Double],\n                                  coverageList: Array[Double],\n                                  elapsedTimeSum: Double,\n                                  elapsedTime: Double,\n                                  movingTime: Double\n                                )","user":"anonymous","dateUpdated":"2020-01-06T23:59:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class EdgesPerActivity\n"}]},"apps":[],"jobName":"paragraph_1577999470897_508206648","id":"20200102-211110_1102873023","dateCreated":"2020-01-02T21:11:10+0000","dateStarted":"2020-01-06T23:59:20+0000","dateFinished":"2020-01-06T23:59:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106759"},{"text":"spark.read.parquet(s\"s3a://strava.scratch/gbm/bay-area/perEdgeTraversalStream/key=1891\").printSchema","user":"anonymous","dateUpdated":"2020-01-06T19:05:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- activityId: long (nullable = true)\n |-- athleteId: long (nullable = true)\n |-- edgeUID: long (nullable = true)\n |-- activityType: string (nullable = true)\n |-- streamStartPointer: double (nullable = true)\n |-- streamEndPointer: double (nullable = true)\n |-- meanDistance: double (nullable = true)\n |-- elapsedTime: double (nullable = true)\n |-- meanSpeed: double (nullable = true)\n |-- coverage: double (nullable = true)\n |-- startDateLocal: double (nullable = true)\n |-- time: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- latlng: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- lat: double (nullable = true)\n |    |    |-- lng: double (nullable = true)\n |-- speed: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- elevation: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- cadence: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- heartrate: array (nullable = true)\n |    |-- element: double (containsNull = true)\n |-- power: array (nullable = true)\n |    |-- element: double (containsNull = true)\n\n"}]},"apps":[],"jobName":"paragraph_1577992115646_-1233789458","id":"20200102-190835_1462885509","dateCreated":"2020-01-02T19:08:35+0000","dateStarted":"2020-01-06T19:05:27+0000","dateFinished":"2020-01-06T19:05:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106760"},{"text":"// 1. read edgeTraversal\n// 2. group by activityID and sort by timestamp\n// 3. log a sequence of (edgeUID, meta) for each acitivity and save\n\n","user":"anonymous","dateUpdated":"2020-01-06T19:06:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1577997500772_140577595","id":"20200102-203820_989995524","dateCreated":"2020-01-02T20:38:20+0000","dateStarted":"2020-01-06T19:06:57+0000","dateFinished":"2020-01-06T19:06:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106761"},{"text":"\n\nval timeDf = spark.read.load(s\"s3a://strava.scratch/gbm/bay-area/activities\").\nselectExpr(\"ACTIVITY_ID\", \"int(ELAPSED_TIME) as elapsedTime\", \"int(MOVING_TIME) as movingTime\")","user":"anonymous","dateUpdated":"2020-01-06T23:59:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"timeDf: org.apache.spark.sql.DataFrame = [ACTIVITY_ID: decimal(38,0), elapsedTime: int ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1578076672879_2037970501","id":"20200103-183752_523919636","dateCreated":"2020-01-03T18:37:52+0000","dateStarted":"2020-01-06T23:59:44+0000","dateFinished":"2020-01-06T23:59:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106762"},{"text":"// val keyRange = 1890 to 2823 by 10\n// val keyRange = 1890 to 2023 by 10\nval keyRange = 1900 to 2823 by 10","user":"anonymous","dateUpdated":"2020-01-07T04:13:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"keyRange: scala.collection.immutable.Range = Range(1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100, 2110, 2120, 2130, 2140, 2150, 2160, 2170, 2180, 2190, 2200, 2210, 2220, 2230, 2240, 2250, 2260, 2270, 2280, 2290, 2300, 2310, 2320, 2330, 2340, 2350, 2360, 2370, 2380, 2390, 2400, 2410, 2420, 2430, 2440, 2450, 2460, 2470, 2480, 2490, 2500, 2510, 2520, 2530, 2540, 2550, 2560, 2570, 2580, 2590, 2600, 2610, 2620, 2630, 2640, 2650, 2660, 2670, 2680, 2690, 2700, 2710, 2720, 2730, 2740, 2750, 2760, 2770, 2780, 2790, 2800, 2810, 2820)\n"}]},"apps":[],"jobName":"paragraph_1578339246400_-323589696","id":"20200106-193406_1543027564","dateCreated":"2020-01-06T19:34:06+0000","dateStarted":"2020-01-07T04:13:32+0000","dateFinished":"2020-01-07T04:13:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106763"},{"text":"// import com.strava.commons.util.geo.GeoHash\n// import com.strava.commons.util.geo.Geometry\n// import com.strava.commons.thrift.Point\n// import org.apache.spark.sql.functions.broadcast\n\n//   val edges = spark.read.parquet(\"s3a://strava.gbm/builds/190902/edges\").select(\"id\", \"sourceHash\").as[(Long, Long)].filter{x => \n//      Geometry.distance(GeoHash.decode(x._2), Point(37.771, -122.452)) < 50000\n//  }\n//  val edgeIds = broadcast(edges.map(_._1).cache())\n \n//  val edgeIdsInt = edgeIds.map(_.toInt).cache()\n","user":"anonymous","dateUpdated":"2020-01-07T04:13:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.strava.commons.util.geo.GeoHash\nimport com.strava.commons.util.geo.Geometry\nimport com.strava.commons.thrift.Point\nimport org.apache.spark.sql.functions.broadcast\nedges: org.apache.spark.sql.Dataset[(Long, Long)] = [id: int, sourceHash: bigint]\nedgeIds: org.apache.spark.sql.Dataset[Long] = [value: bigint]\nedgeIdsInt: org.apache.spark.sql.Dataset[Int] = [value: int]\n"}]},"apps":[],"jobName":"paragraph_1578354852097_-885306403","id":"20200106-235412_1484621741","dateCreated":"2020-01-06T23:54:12+0000","dateStarted":"2020-01-07T00:00:07+0000","dateFinished":"2020-01-07T00:00:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106764"},{"text":"keyRange.foreach{\n\n    key =>\n    {\n     print(s\"processing key=$key \\n\")\n     val wildkey = key / 10 + \"*\"\n     val alignment = spark.read.parquet(s\"s3a://strava.gbm/builds/190902/alignment/key=$wildkey\").\n       select(\"activityId\", \"athleteId\", \"edgeUID\", \"activityType\", \"streamStartPointer\", \"meanDistance\", \"elapsedTime\", \"coverage\", \"startDateLocal\")\n       \n       \n       val ids = spark.read.parquet(s\"s3a://strava.scratch/gbm/bay-area/perEdgeTraversalStream/key=$wildkey\").select(\"activityId\").distinct.as[Long]\n val aIds = broadcast(ids.cache())\n \n  val alignDf = alignment.joinWith(aIds, alignment(\"activityId\") === aIds(\"activityId\")).select(\"_1.*\")\n\n\n  alignDf.createOrReplaceTempView(\"edges\")\n     \n      val myQuery = \"\"\"\nselect activityId, athleteId, first(activityType) as activityType, first(startDateLocal) as startDateLocal,\ncollect_list(edgeUID) as edgeList,\ncollect_list(elapsedTime) as durationList,\ncollect_list(meanDistance) as distanceList,\ncollect_list(coverage) as coverageList,\nsum(elapsedTime) as elapsedTimeSum\nfrom (\n    select *\n    from edges\n    where activityType in ('Run', 'Ride')\n    distribute by activityId, athleteId\n    sort by streamStartPointer\n) x\ngroup by activityId, athleteId\n\"\"\"\n\n      val activityDf =  spark.sql(myQuery)\n      \n      val result = activityDf.join(timeDf,\ncol(\"activityId\") === col(\"ACTIVITY_ID\")).drop(\"ACTIVITY_ID\").as[EdgesPerActivity]\n    \n      result.repartition(1).write.mode(SaveMode.Overwrite).option(\"compression\", \"gzip\").parquet(s\"s3a://strava.scratch/gbm/bay-area/edgesPerActivityTest/key=$key\")\n    }\n  }","user":"anonymous","dateUpdated":"2020-01-07T16:42:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"processing key=1900 \nprocessing key=1910 \nprocessing key=1920 \nprocessing key=1930 \nprocessing key=1940 \nprocessing key=1950 \nprocessing key=1960 \nprocessing key=1970 \nprocessing key=1980 \nprocessing key=1990 \nprocessing key=2000 \nprocessing key=2010 \nprocessing key=2020 \nprocessing key=2030 \nprocessing key=2040 \nprocessing key=2050 \nprocessing key=2060 \nprocessing key=2070 \nprocessing key=2080 \nprocessing key=2090 \nprocessing key=2100 \nprocessing key=2110 \nprocessing key=2120 \nprocessing key=2130 \nprocessing key=2140 \nprocessing key=2150 \nprocessing key=2160 \nprocessing key=2170 \nprocessing key=2180 \nprocessing key=2190 \nprocessing key=2200 \nprocessing key=2210 \nprocessing key=2220 \nprocessing key=2230 \nprocessing key=2240 \nprocessing key=2250 \nprocessing key=2260 \nprocessing key=2270 \nprocessing key=2280 \nprocessing key=2290 \nprocessing key=2300 \nprocessing key=2310 \nprocessing key=2320 \nprocessing key=2330 \nprocessing key=2340 \nprocessing key=2350 \nprocessing key=2360 \nprocessing key=2370 \nprocessing key=2380 \nprocessing key=2390 \nprocessing key=2400 \nprocessing key=2410 \nprocessing key=2420 \nprocessing key=2430 \nprocessing key=2440 \nprocessing key=2450 \nprocessing key=2460 \nprocessing key=2470 \nprocessing key=2480 \nprocessing key=2490 \nprocessing key=2500 \nprocessing key=2510 \nprocessing key=2520 \nprocessing key=2530 \nprocessing key=2540 \nprocessing key=2550 \nprocessing key=2560 \nprocessing key=2570 \nprocessing key=2580 \nprocessing key=2590 \nprocessing key=2600 \nprocessing key=2610 \nprocessing key=2620 \nprocessing key=2630 \nprocessing key=2640 \nprocessing key=2650 \nprocessing key=2660 \nprocessing key=2670 \nprocessing key=2680 \nprocessing key=2690 \nprocessing key=2700 \nprocessing key=2710 \nprocessing key=2720 \nprocessing key=2730 \nprocessing key=2740 \nprocessing key=2750 \nprocessing key=2760 \nprocessing key=2770 \nprocessing key=2780 \nprocessing key=2790 \nprocessing key=2800 \nprocessing key=2810 \nprocessing key=2820 \n"}]},"apps":[],"jobName":"paragraph_1577988629387_-1871333074","id":"20200102-181029_865365130","dateCreated":"2020-01-02T18:10:29+0000","dateStarted":"2020-01-07T04:14:16+0000","dateFinished":"2020-01-07T06:51:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106765"},{"text":"spark.read.parquet(s\"s3a://strava.scratch/gbm/bay-area/edgesPerActivity/key=1900\").createOrReplaceTempView(\"temp1\")\nspark.read.parquet(s\"s3a://strava.scratch/gbm/bay-area/edgesPerActivityTest/key=1900\").createOrReplaceTempView(\"temp2\")\n","user":"anonymous","dateUpdated":"2020-01-07T16:37:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res70: Array[org.apache.spark.sql.Row] = Array([1900217324,4027.940337407376,4150,4089,96])\nres71: Array[org.apache.spark.sql.Row] = Array([1900217324,4154.000121112409,4150,4089,100])\n"}]},"apps":[],"jobName":"paragraph_1578370177343_719229130","id":"20200107-040937_100873668","dateCreated":"2020-01-07T04:09:37+0000","dateStarted":"2020-01-07T16:36:46+0000","dateFinished":"2020-01-07T16:36:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106766"},{"text":"\nspark.sql(\"select activityId, elapsedTimeSum, elapsedTime, movingTime, size(durationList) as num from temp1 where activityId = 1902663202\").collect\nspark.sql(\"select activityId, elapsedTimeSum, elapsedTime, movingTime, size(durationList) as num from temp2 where activityId = 1902663202\").collect","user":"anonymous","dateUpdated":"2020-01-07T16:38:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res76: Array[org.apache.spark.sql.Row] = Array([1902663202,4745.0223323188975,5516,4871,239])\nres77: Array[org.apache.spark.sql.Row] = Array([1902663202,5328.0002566150815,5516,4871,251])\n"}]},"apps":[],"jobName":"paragraph_1578370238374_-1911135187","id":"20200107-041038_929539894","dateCreated":"2020-01-07T04:10:38+0000","dateStarted":"2020-01-07T16:38:17+0000","dateFinished":"2020-01-07T16:38:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106767"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578355967975_-563412794","id":"20200107-001247_1987061938","dateCreated":"2020-01-07T00:12:47+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:106768"}],"name":"/lucindaz/edgesPerActivity","id":"2EZ946BN2","noteParams":{},"noteForms":{},"angularObjects":{"snowflake:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}